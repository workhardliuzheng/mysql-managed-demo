ROSTemplateFormatVersion: '2015-09-01'
# 定义参数
Parameters:
  # 可用区
  ZoneId:
    Type: String
    AssociationProperty: ALIYUN::ECS::Instance:ZoneId
    Label:
      en: VSwitch Available Zone
      zh-cn: 可用区
  # 数据库root账户密码
  Password:
    # 查询该参数时只输出星号（*）
    NoEcho: true
    Type: String
    Description:
      en: 'Database root and admin account password, 8-32 characters, including uppercase and lowercase letters, numbers and special symbols (including: !@#$%^&*-+=_).'
      zh-cn: 数据库root和admin账户密码，长度8-32个字符，可包含大小字母、数字及特殊符号（包含：!@#$%^&*-+=_）。
    Label:
      en: root and admin Account Password
      zh-cn: 数据库root和admin账户密码
    ConstraintDescription:
      en: '8-32 characters, including uppercase and lowercase letters, numbers and special symbols (including: !@#$%^&*-+=_).'
      zh-cn: 8-32个字符，可包含大小字母、数字及特殊符号（包含：!@#$%^&*-+=_）。
    MinLength: '8'
    MaxLength: '32'
    AssociationProperty: ALIYUN::ECS::Instance::Password
  # 专有网络VPC实例ID
  VpcId:
    AssociationProperty: ALIYUN::ECS::VPC::VPCId
    Type: String
    Label:
      en: VPC ID
      zh-cn: 专有网络VPC实例ID
  # 交换机实例ID
  VSwitchId:
    AssociationProperty: ALIYUN::ECS::VSwitch::VSwitchId
    AssociationPropertyMetadata:
      VpcId: ${VpcId}
      ZoneId: ${ZoneId}
    Type: String
    Label:
      en: VSwitch ID
      zh-cn: 交换机实例ID
  # 数据盘大小
  DataDiskSize:
    Description:
      zh-cn: ECS实例数据盘大小，单位为GiB。取值范围：100~32768
      en: 'ECS Instance disk size, range of values: 100-32768, units: GB'
    Default: 200
    MaxValue: 32768
    MinValue: 100
    Label:
      zh-cn: 数据盘空间
      en: Data Disk Space
    Type: Number
  # Ecs实例类型
  EcsInstanceType:
    Type: String
    Label:
      en: Instance Type
      zh-cn: Ecs实例类型
    AssociationProperty: ALIYUN::ECS::Instance::InstanceType
    AllowedValues:
      - ecs.c6.large
      - ecs.c6.xlarge
      - ecs.c6.2xlarge
      - ecs.c6.4xlarge
  SlbInstanceType:
    Type: String
    Label:
      en: Instance Type
      zh-cn: Slb实例类型
    AssociationProperty: ALIYUN::Slb::LoadBalance::LoadBalancerSpec
    AllowedValues:
      - slb.s1.small
      - slb.s3.small
  ConfigParam:
    Type: String
    Description:
      zh-cn: 数据库配置参数
      en: Database configuration parameters
    Label:
      zh-cn: 数据库配置参数
      en: Database Configuration Parameter
    Default: ''
# 定义资源
Resources:
  # 定义WaitCondition和WaitConditionHandle来等待命令在Ecs中执行完毕部署成功
  WaitCondition:
    Type: ALIYUN::ROS::WaitCondition
    Properties:
      Count: 1
      Handle:
        Ref: WaitConditionHandle
      Timeout: 1800
  WaitConditionHandle:
    Type: ALIYUN::ROS::WaitConditionHandle
  RunCommandWaitCondition:
    Type: ALIYUN::ROS::WaitCondition
    Properties:
      Count: 1
      Handle:
        Ref: RunCommandWaitConditionHandle
      Timeout: 1800
  RunCommandWaitConditionHandle:
    Type: ALIYUN::ROS::WaitConditionHandle
  EcsSecurityGroup:
    Type: 'ALIYUN::ECS::SecurityGroup'
    Properties:
      VpcId:
        Ref: VpcId
      SecurityGroupIngress:
        - Priority: 1
          PortRange: 3306/3306
          NicType: internet
          SourceCidrIp: 0.0.0.0/0
          IpProtocol: tcp
  # Ecs实例
  EcsInstanceGroup:
    Type: ALIYUN::ECS::InstanceGroup
    Properties:
      # I/O优化实例
      IoOptimized: optimized
      UpdatePolicy: ForAllInstances
      ZoneId:
        Ref: ZoneId
      DiskMappings:
        - Category: cloud_essd
          Device: /dev/xvdb
          Size:
            Ref: DataDiskSize
      SystemDiskSize: 40
      # 付费方式：按量付费
      InstanceChargeType: PostPaid
      MaxAmount: 1
      # 系统盘类型：cloud_essd
      SystemDiskCategory: cloud_essd
      # 实例名称
      InstanceName:
        Ref: ALIYUN::StackName
      VpcId:
        Ref: VpcId
      SecurityGroupId:
        Ref: EcsSecurityGroup
      VSwitchId:
        Ref: VSwitchId
      # 指定CentOS 7.9镜像，如果修改镜像，UserData脚本需要进行适配
      ImageId: "centos_7_9_x64_20G_alibase_20220727.vhd"
      InstanceType:
        Ref: EcsInstanceType
      # 主机名
      HostName:
        Ref: ALIYUN::StackName
      # Ecs登录密码
      Password:
        Ref: Password
      # 是否为实例分配公网IP
      AllocatePublicIP: true
      InternetMaxBandwidthOut: 1
  # ECS执行脚本
  RunCommand:
    Type: ALIYUN::ECS::RunCommand
    Properties:
      CommandContent:
        Fn::Sub:
          - |
            #!/bin/sh
            FLAG_FILE="/root/.disk_initialized"
            PARTITION=/dev/vdb1
            MOUNT_POINT=/data1
            
            initialize_disk() {
              # 初始化数据盘，对数据盘分区            
              cat >> /root/InitDataDisk.sh << EOF
              #!/bin/bash
              echo "p
              n
              p
            
            
            
              w
              " |  fdisk -u /dev/vdb
            EOF
              /bin/bash /root/InitDataDisk.sh
              rm -f /root/InitDataDisk.sh
              rm -f InitDataDisk.sh
            
              # 在新分区上创建文件系统
              mkfs.ext4 /dev/vdb1
            
              # 创建目录，MySQL将安装在该目录下
              mkdir /data1
            
              # 挂载文件系统
              mount /dev/vdb1 /data1
            
              # 向 /etc/fstab 写入新分区信息
              echo /dev/vdb1 /data1 ext4 defaults,nodelalloc,noatime 0 2 >> /etc/fstab
            }
            
            install_mysql() {
              # 安装社区版MySQL
              cd /data1/
              wget '{{ computenest::file::MySQL }}' -O mysql-community-release-el6-5.noarch.rpm
              rpm -ivh mysql-community-release-el6-5.noarch.rpm
              yum repolist all | grep mysql
              yum install mysql-community-server -y
            
              # 启动MySQL服务
              service mysqld start
            }
              
            configure_mysql() {
              # 以超级用户身份登入，创建admin用户，并允许admin用户以Password为密码远程登录
              mysqladmin -u root password '${Password}'
              echo "create database test character set utf8 collate utf8_bin;" > ./test.sql
              echo "CREATE USER 'admin'@'%' IDENTIFIED BY '${Password}';" >> ./test.sql
              echo "GRANT ALL PRIVILEGES ON *.* TO 'admin'@'%' WITH GRANT OPTION;" >> ./test.sql
              mysql -u root -p'${Password}' < ./test.sql
            }
            
            move_mysql_data() {
              # 将MySQL的配置和数据路径移动到数据盘上
              systemctl stop mysqld
              rsync -av /var/lib/mysql /data1
            
              # 修改配置文件
              sed -i 's/\/var\/lib/\/data1/g' /etc/my.cnf
              echo -e '\n' >> /etc/my.cnf
              echo '[client]' >> /etc/my.cnf
              echo 'port=3306' >> /etc/my.cnf
              echo 'socket=/data1/mysql/mysql.sock' >> /etc/my.cnf
            
              # 重启MySQL
              systemctl start mysqld
            }
            
            expand_partition() {
              # 检查磁盘的实际大小和分区大小是否相同
              DISK_SIZE=$(lsblk -brnd -o SIZE /dev/vdb)
              PART_SIZE=$(($(lsblk -brnd -o SIZE /dev/vdb1) + 1073741000)) 
            
            
              if [ "$DISK_SIZE" -gt "$PART_SIZE" ]; then
                # 使用 growpart 扩展分区
                echo "Expanding partition..."
                if ! growpart /dev/vdb 1; then
                  echo "Failed to expand partition"
                  exit 1
                fi
            
                # 通知系统分区的更改
                partprobe $PARTITION
            
                # 使用 e2fsck 检查文件系统
                echo "Checking filesystem..."
                e2fsck -f -y $PARTITION
            
                # 扩展文件系统
                echo "Resizing filesystem..."
                resize2fs $PARTITION    
            
              else
                echo "The partition size is equal to disk size. No need to expand."
              fi
            }
            
            if [ ! -f "$FLAG_FILE" ]; then
              # 首次创建ECS时执行
            
              # 确保网络就绪
              sleep 15
            
              initialize_disk
              install_mysql
              configure_mysql
              move_mysql_data
            
              # 当初始化完成后，创建一个标志文件
              touch "$FLAG_FILE"
              echo "Initialization complete. Flag file created."
            
              # 执行成功回调WaitCondition结束WaitCondition的等待
              ${CurlCli} -d "{\"Data\" : \"SUCCESS\", \"Status\" : \"SUCCESS\"}"
            
            else
              # 扩容数据盘时执行
            
              # 停止MySQL服务
              systemctl stop mysqld
            
              # 检查并确保分区未被挂载
              if mountpoint -q $MOUNT_POINT; then
                umount $MOUNT_POINT
              fi
            
              expand_partition
            
              # 重新挂载分区
              echo "Remounting partition..."
              mount $PARTITION $MOUNT_POINT
            
              # 启动MySQL服务
              systemctl start mysqld
            fi
        # 获取到WaitConditionHandle的地址放到 ${CurlCli}变量里
          - CurlCli:
              Fn::GetAtt:
                - WaitConditionHandle
                - CurlCli
            # 数据库root账户密码
            Password:
              Ref: Password
      Type: RunShellScript
      Timeout: 900
      Sync: true
      InstanceIds:
        - Ref: EcsInstanceGroup
  # 修改配置文件
  InstanceRunCommand:
    Type: ALIYUN::ECS::RunCommand
    DependsOn:
      - EcsInstanceGroup
      - WaitCondition
      - RunCommand
    Properties:
      Sync: true
      CommandContent:
        Fn::Sub:
          - |
            cat > /etc/my.cnf << "EOF"
            ${ConfigParam}
            EOF
            systemctl restart mysqld
            ${CurlCli} -d "{\"Data\" : \"SUCCESS\", \"Status\" : \"SUCCESS\"}"
          - CurlCli:
              Fn::GetAtt:
                - RunCommandWaitConditionHandle
                - CurlCli
            ConfigParam:
              Fn::Select:
                - mysql
                - Ref: ConfigParam
      Type: RunShellScript
      InstanceIds:
        Fn::GetAtt:
          - EcsInstanceGroup
          - InstanceIds
      Timeout: '3000'
  Slb:
    Type: ALIYUN::SLB::LoadBalancer
    Properties:
      LoadBalancerName:
        Fn::Join:
          - '-'
          - - mysql
            - Ref: ALIYUN::StackName
      VpcId:
        Ref: VpcId
      VSwitchId:
        Ref: VSwitchId
      PayType: PayOnDemand
      AddressType: intranet
      LoadBalancerSpec:
        Ref: SlbInstanceType
      SupportPrivateLink: true
  SlbBackendServerAttachment:
    DependsOn:
      - EcsInstanceGroup
    Type: ALIYUN::SLB::BackendServerAttachment
    Properties:
      BackendServerList:
        Fn::GetAtt:
          - EcsInstanceGroup
          - InstanceIds
      LoadBalancerId:
        Ref: Slb
      BackendServerWeightList:
        - 100
        - 0
  SlbListener:
    DependsOn: Slb
    Type: ALIYUN::SLB::Listener
    Properties:
      Persistence:
        CookieTimeout: 60
        StickySession: 'on'
        PersistenceTimeout: 180
        XForwardedFor: 'off'
        StickySessionType: insert
      ListenerPort: 3306
      Bandwidth: -1
      HealthCheck:
        HttpCode: http_2xx,http_3xx,http_4xx,http_5xx
        HealthCheckType: tcp
        UnhealthyThreshold: 3
        Timeout: 5
        HealthyThreshold: 3
        Port: 3306
        URI: /
        Interval: 2
      LoadBalancerId:
        Ref: Slb
      BackendServerPort: 3306
      Protocol: tcp
  VpcEndpointService:
    DependsOn: Slb
    Type: ALIYUN::PrivateLink::VpcEndpointService
    Properties:
      ServiceDescription: isv service
      Resource:
        - ZoneId:
            Ref: ZoneId
          ResourceId:
            Ref: Slb
          ResourceType: slb
      AutoAcceptEnabled: true
# 定义输出
Outputs:
  EndpointServiceId:
    Description:
      en: EndpointService Id
      zh-cn: 终端节点服务Id
    Value:
      Fn::GetAtt:
        - VpcEndpointService
        - ServiceId
  MysqlUserName:
    Description:
      en: MySQL User Name
      zh-cn: MySQL登录用户名
    Value: admin
# 定义元数据
Metadata:
  ALIYUN::ROS::Interface:
    # 定义资源分组，创建服务实例时，同一分组的参数分布在一起
    ParameterGroups:
      - Parameters:
          - EcsInstanceType
          - SlbInstanceType
        Label:
          en: Instance Type
          zh-cn: 实例规格
      - Parameters:
          - Password
          - DataDiskSize
        Label:
          en: Basic Configuration
          zh-cn: 基础配置
      - Parameters:
          - ZoneId
          - VpcId
          - VSwitchId
        Label:
          en: Network Configuration
          zh-cn: 网络配置